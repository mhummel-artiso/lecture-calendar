---
###############################################################
#                   Authelia configuration                    #
###############################################################

theme: 'auto'

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
jwt_secret: ''
default_redirection_url: https://public.localhost.local
server:
  address: 'tcp://:9091'

log:
  level: debug

totp:
  issuer: authelia.com

# duo_api:
#  hostname: api-123456789.localhost.local
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: 1234567890abcdefghifjkl

authentication_backend:
  file:
    path: /config/users_database.yml
    watch: true
    search:
      email: true
      username: true
    # password:
    #     algorithm: argon2
    #     argon2:
    #       variant: argon2id
    #       iterations: 3
    #       memory: 65536
    #       parallelism: 4
    #       key_length: 32
    #       salt_length: 16
    #     scrypt:
    #       iterations: 16
    #       block_size: 8
    #       parallelism: 1
    #       key_length: 32
    #       salt_length: 16
    #     pbkdf2:
    #       variant: sha512
    #       iterations: 310000
    #       salt_length: 16
    #     sha2crypt:
    #       variant: sha512
    #       iterations: 50000
    #       salt_length: 16
    #     bcrypt:
    #       variant: standard
    #       cost: 12

access_control:
  default_policy: one_factor
  rules:
    # Rules applied to everyone
    - domain: public.localhost.local
      policy: bypass
    - domain: traefik.localhost.local
      policy: one_factor
    - domain: secure.localhost.local
      policy: one_factor

session:
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  domain: 'authelia.localhost.local'
  # cookies:
  #   - name: authelia_session
  #     domain: localhost.local  # Should match whatever your root protected domain is
  #     expiration: 3600  # 1 hour
  #     inactivity: 300  # 5 minutes

  redis:
    host: redis
    port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: authelia

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  encryption_key: you_must_generate_a_random_string_of_more_than_twenty_chars_and_configure_this
  # local:
  #   path: /config/db.sqlite3
  mysql:
    host: mariadb
    port: 3306
    database: authelia
    username: root
    # Password can also be set using a secret: https://www.authelia.com/c/secrets
    password: example
    timeout: 5s
  # postgres:
  #   host: posgress
  #   port: 5432
  #   database: authelia
  #   schema: public
  #   username: authelia
  #   # Password can also be set using a secret: https://www.authelia.com/c/secrets
  #   password: ''
  #   timeout: 5s
notifier: 
  disable_startup_check: true
  filesystem:
    filename: /config/notification.txt
#   smtp:
#     username: test
#     # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
#     password: password
#     host: mail.localhost.local
#     port: 25
#     sender: admin@localhost.local
identity_providers:
  #
  # OpenID Connect (Identity Provider)
  #
  # It's recommended you read the documentation before configuration of this section:
  # https://www.authelia.com/c/oidc
  oidc:
    # The hmac_secret is used to sign OAuth2 tokens (authorization code, access tokens and refresh tokens).
    # HMAC Secret can also be set using a secret: https://www.authelia.com/c/secrets
    hmac_secret: this_is_a_secret_abc123abc123abc

    # The issuer_certificate_chain is an optional PEM encoded certificate chain. It's used in conjunction with the
    # issuer_private_key to sign JWT's. All certificates in the chain must be within the validity period, and every
    # certificate included must be signed by the certificate immediately after it if provided.
    issuer_certificate_chain: |
      -----BEGIN CERTIFICATE-----
      MIIC5jCCAc6gAwIBAgIRAK4Sj7FiN6PXo/urPfO4E7owDQYJKoZIhvcNAQELBQAw
      EzERMA8GA1UEChMIQXV0aGVsaWEwHhcNNzAwMTAxMDAwMDAwWhcNNzEwMTAxMDAw
      MDAwWjATMREwDwYDVQQKEwhBdXRoZWxpYTCCASIwDQYJKoZIhvcNAQEBBQADggEP
      ADCCAQoCggEBAPKv3pSyP4ozGEiVLJ14dIWFCEGEgq7WUMI0SZZqQA2ID0L59U/Q
      /Usyy7uC9gfMUzODTpANtkOjFQcQAsxlR1FOjVBrX5QgjSvXwbQn3DtwMA7XWSl6
      LuYx2rBYSlMSN5UZQm/RxMtXfLK2b51WgEEYDFi+nECSqKzR4R54eOPkBEWRfvuY
      91AMjlhpivg8e4JWkq4LVQUKbmiFYwIdK8XQiN4blY9WwXwJFYs5sQ/UYMwBFi0H
      kWOh7GEjfxgoUOPauIueZSMSlQp7zqAH39N0ZSYb6cS0Npj57QoWZSY3ak87ebcR
      Nf4rCvZLby7LoN7qYCKxmCaDD3x2+NYpWH8CAwEAAaM1MDMwDgYDVR0PAQH/BAQD
      AgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcN
      AQELBQADggEBAHSITqIQSNzonFl3DzxHPEzr2hp6peo45buAAtu8FZHoA+U7Icfh
      /ZXjPg7Xz+hgFwM/DTNGXkMWacQA/PaNWvZspgRJf2AXvNbMSs2UQODr7Tbv+Fb4
      lyblmMUNYFMCFVAMU0eIxXAFq2qcwv8UMcQFT0Z/35s6PVOakYnAGGQjTfp5Ljuq
      wsdc/xWmM0cHWube6sdRRUD7SY20KU/kWzl8iFO0VbSSrDf1AlEhnLEkp1SPaxXg
      OdBnl98MeoramNiJ7NT6Jnyb3zZ578fjaWfThiBpagItI8GZmG4s4Ovh2JbheN8i
      ZsjNr9jqHTjhyLVbDRlmJzcqoj4JhbKs6/I^invalid DO NOT USE=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDBDCCAeygAwIBAgIRALJsPg21kA0zY4F1wUCIuoMwDQYJKoZIhvcNAQELBQAw
      EzERMA8GA1UEChMIQXV0aGVsaWEwHhcNNzAwMTAxMDAwMDAwWhcNNzEwMTAxMDAw
      MDAwWjATMREwDwYDVQQKEwhBdXRoZWxpYTCCASIwDQYJKoZIhvcNAQEBBQADggEP
      ADCCAQoCggEBAMXHBvVxUzYk0u34/DINMSF+uiOekKOAjOrC6Mi9Ww8ytPVO7t2S
      zfTvM+XnEJqkFQFgimERfG/eGhjF9XIEY6LtnXe8ATvOK4nTwdufzBaoeQu3Gd50
      5VXr6OHRo//ErrGvFXwP3g8xLePABsi/fkH3oDN+ztewOBMDzpd+KgTrk8ysv2ou
      kNRMKFZZqASvCgv0LD5KWvUCnL6wgf1oTXG7aztduA4oSkUP321GpOmBC5+5ElU7
      ysoRzvD12o9QJ/IfEaulIX06w9yVMo60C/h6A3U6GdkT1SiyTIqR7v7KU/IWd/Qi
      Lfftcj91VhCmJ73Meff2e2S2PrpjdXbG5FMCAwEAAaNTMFEwDgYDVR0PAQH/BAQD
      AgKkMA8GA1UdJQQIMAYGBFUdJQAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU
      Z7AtA3mzFc0InSBA5fiMfeLXA3owDQYJKoZIhvcNAQELBQADggEBAEE5hm1mtlk/
      kviCoHH4evbpw7rxPxDftIQlqYTtvMM4eWY/6icFoSZ4fUHEWYyps8SsPu/8f2tf
      71LGgZn0FdHi1QU2H8m0HHK7TFw+5Q6RLrLdSyk0PItJ71s9en7r8pX820nAFEHZ
      HkOSfJZ7B5hFgUDkMtVM6bardXAhoqcMk4YCU96e9d4PB4eI+xGc+mNuYvov3RbB
      D0s8ICyojeyPVLerz4wHjZu68Z5frAzhZ68YbzNs8j2fIBKKHkHyLG1iQyF+LJVj
      2PjCP+auJsj6fQQpMGoyGtpLcSDh+ptcTngUD8JsWipzTCjmaNqdPHAOYmcgtf4b
      qocikt3WAdU^invalid DO NOT USE=
      -----END CERTIFICATE-----

    # The issuer_private_key is used to sign the JWT forged by OpenID Connect.
    # Issuer Private Key can also be set using a secret: https://www.authelia.com/c/secrets
    issuer_private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEA8q/elLI/ijMYSJUsnXh0hYUIQYSCrtZQwjRJlmpADYgPQvn1
      T9D9SzLLu4L2B8xTM4NOkA22Q6MVBxACzGVHUU6NUGtflCCNK9fBtCfcO3AwDtdZ
      KXou5jHasFhKUxI3lRlCb9HEy1d8srZvnVaAQRgMWL6cQJKorNHhHnh44+QERZF+
      +5j3UAyOWGmK+Dx7glaSrgtVBQpuaIVjAh0rxdCI3huVj1bBfAkVizmxD9RgzAEW
      LQeRY6HsYSN/GChQ49q4i55lIxKVCnvOoAff03RlJhvpxLQ2mPntChZlJjdqTzt5
      txE1/isK9ktvLsug3upgIrGYJoMPfHb41ilYfwIDAQABAoIBAQDTOdFf2JjHH1um
      aPgRAvNf9v7Nj5jytaRKs5nM6iNf46ls4QPreXnMhqSeSwj6lpNgBYxOgzC9Q+cc
      Y4ob/paJJPaIJTxmP8K/gyWcOQlNToL1l+eJ20eQoZm23NGr5fIsunSBwLEpTrdB
      ENqqtcwhW937K8Pxy/Q1nuLyU2bc6Tn/ivLozc8n27dpQWWKh8537VY7ancIaACr
      LJJLYxKqhQpjtBWAyCDvZQirnAOm9KnvIHaGXIswCZ4Xbsu0Y9NL+woARPyRVQvG
      jfxy4EmO9s1s6y7OObSukwKDSNihAKHx/VIbvVWx8g2Lv5fGOa+J2Y7o9Qurs8t5
      BQwMTt0BAoGBAPUw5Z32EszNepAeV3E2mPFUc5CLiqAxagZJuNDO2pKtyN29ETTR
      Ma4O1cWtGb6RqcNNN/Iukfkdk27Q5nC9VJSUUPYelOLc1WYOoUf6oKRzE72dkMQV
      R4bf6TkjD+OVR17fAfkswkGahZ5XA7j48KIQ+YC4jbnYKSxZTYyKPjH/AoGBAP1i
      tqXt36OVlP+y84wWqZSjMelBIVa9phDVGJmmhz3i1cMni8eLpJzWecA3pfnG6Tm9
      ze5M4whASleEt+M00gEvNaU9ND+z0wBfi+/DwJYIbv8PQdGrBiZFrPhTPjGQUldR
      lXccV2meeLZv7TagVxSi3DO6dSJfSEHyemd5j9mBAoGAX8Hv+0gOQZQCSOTAq8Nx
      6dZcp9gHlNaXnMsP9eTDckOSzh636JPGvj6m+GPJSSbkURUIQ3oyokMNwFqvlNos
      fTaLhAOfjBZI9WnDTTQxpugWjphJ4HqbC67JC/qIiw5S6FdaEvGLEEoD4zoChywZ
      9oGAn+fz2d/0/JAH/FpFPgsCgYEAp/ipZgPzziiZ9ov1wbdAQcWRj7RaWnssPFpX
      jXwEiXT3CgEMO4MJ4+KWIWOChrti3qFBg6i6lDyyS6Qyls7sLFbUdC7HlTcrOEMe
      rBoTcCI1GqZNlqWOVQ65ZIEiaI7o1vPBZo2GMQEZuq8mDKFsOMThvvTrM5cAep84
      n6HJR4ECgYABWcbsSnr0MKvVth/inxjbKapbZnp2HUCuw87Ie5zK2Of/tbC20wwk
      yKw3vrGoE3O1t1g2m2tn8UGGASeZ842jZWjIODdSi5+icysQGuULKt86h/woz2SQ
      27GoE2i5mh6Yez6VAYbUuns3FcwIsMyWLq043Tu2DNkx9ijOOAuQzw^invalid..
      DO NOT USE==
      -----END RSA PRIVATE KEY-----

    # The lifespans configure the expiration for these token types.
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m

    # Enables additional debug messages.
    enable_client_debug_messages: true

    # SECURITY NOTICE: It's not recommended changing this option and values below 8 are strongly discouraged.
    minimum_parameter_entropy: 8

    # SECURITY NOTICE: It's not recommended changing this option, and highly discouraged to have it set to 'never'
    # for security reasons.
    enforce_pkce: public_clients_only

    # Cross-Origin Resource Sharing (CORS) settings.
    cors:
      # List of endpoints in addition to the metadata endpoints to permit cross-origin requests on.
      endpoints:
         - authorization
         - token
         - revocation
         - introspection
         - userinfo

      ## List of allowed origins.
      ## Any origin with https is permitted unless this option is configured or the
      ## allowed_origins_from_client_redirect_uris option is enabled.
      # allowed_origins:
        # - https://example.com

      ## Automatically adds the origin portion of all redirect URI's on all clients to the list of allowed_origins,
      ## provided they have the scheme http or https and do not have the hostname of localhost.
      allowed_origins_from_client_redirect_uris: true

    ## Clients is a list of known clients and their configuration.
    clients:
      -
       # The ID is the OpenID Connect ClientID which is used to link an application to a configuration.
       id: myapp
       # The description to show to users when they end up on the consent screen. Defaults to the ID above.
       description: My Application
       # The client secret is a shared secret between Authelia and the consumer of this client.
       secret: this_is_a_secret
       # Sector Identifiers are occasionally used to generate pairwise subject identifiers. In most cases this is not
       # necessary. Read the documentation for more information.
       # The subject identifier must be the host component of a URL, which is a domain name with an optional port.
       sector_identifier: example.com
       # Sets the client to public. This should typically not be set, please see the documentation for usage.
       public: false
       # The policy to require for this client; one_factor or two_factor.
       authorization_policy: two_factor
       # The consent mode controls how consent is obtained.
       consent_mode: auto
       # This value controls the duration a consent on this client remains remembered when the consent mode is
       # configured as 'auto' or 'pre-configured'.
       pre_configured_consent_duration: 1w
       # Audience this client is allowed to request.
       audience: []
       # Scopes this client is allowed to request.
       scopes:
         - openid
         - groups
         - email
         - profile
        # Redirect URI's specifies a list of valid case-sensitive callbacks for this client.
        redirect_uris:
          - https://oidc.example.com:8080/oauth2/callback
        # Grant Types configures which grants this client can obtain.
        # It's not recommended to define this unless you know what you're doing.
        grant_types:
         - refresh_token
          - authorization_code
        # Response Types configures which responses this client can be sent.
        # It's not recommended to define this unless you know what you're doing.
        response_types:
          - code
        # Response Modes configures which response modes this client supports.
        response_modes:
          - form_post
          - query
          - fragment
        # The algorithm used to sign userinfo endpoint responses for this client, either none or RS256.
        userinfo_signing_algorithm: RS256