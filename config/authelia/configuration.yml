---
###############################################################
#                   Authelia configuration                    #
###############################################################

theme: 'auto'

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
jwt_secret: ''
default_redirection_url: https://localhost:3000
server:
  host: localhost
  port: 9091
#   address: 'tcp://localhost:9091'

log:
  level: debug

totp:
  disable: false
#   issuer: authelia.com

# duo_api:
#  hostname: api-123456789.localhost:9091
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: 1234567890abcdefghifjkl

authentication_backend:
  file:
    path: /config/users_database.yml
    watch: true
    search:
      email: true
    password:
        algorithm: argon2
        argon2:
          variant: argon2id
          iterations: 3
          memory: 65536
          parallelism: 4
          key_length: 32
          salt_length: 16
        # scrypt:
        #   iterations: 16
        #   block_size: 8
        #   parallelism: 1
        #   key_length: 32
        #   salt_length: 16
        # pbkdf2:
        #   variant: sha512
        #   iterations: 310000
        #   salt_length: 16
        sha2crypt:
          variant: sha512
          iterations: 50000
          salt_length: 16
        # bcrypt:
        #   variant: standard
        #   cost: 12

access_control:
  default_policy: one_factor
  rules:
    # Rules applied to everyone
    - domain: localhost:9091
      policy: one_factor
    # - domain: traefik.localhost:9091
    #   policy: one_factor
    # - domain: localhost:9091
    #   policy: one_factor

session:
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  name: authelia_session
  same_site: lax
  expiration: 1h  # 1 hour
  inactivity: 5m  # 5 minutes
  domain: 'localhost:9091'
  
  # redis:
  #   host: redis
  #   port: 6379
    # username: default

  # cookies:
  #   - name: authelia_session
  #     domain: localhost:9091  # Should match whatever your root protected domain is
  #     expiration: 3600  # 1 hour
  #     inactivity: 300  # 5 minutes

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  # mysql:
  #   host: mariadb
  #   port: 3306
  #   database: authelia
  #   username: root
  #   # Password can also be set using a secret: https://www.authelia.com/c/secrets
  #   password: example
  #   timeout: 5s
  postgres:
    host: posgressdb
    port: 5432
    database: authelia
    schema: public
    username: authelia
    # Password can also be set using a secret: https://www.authelia.com/c/secrets
    password: '74RuqICjDPQEFREmhIFaqRf6H'
    timeout: 5s
notifier: 
  disable_startup_check: true
  filesystem:
    filename: /config/notification.txt
#   smtp:
#     username: test
#     # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
#     password: password
#     host: mail.localhost:9091
#     port: 25
#     sender: admin@localhost:9091
identity_providers:
  #
  # OpenID Connect (Identity Provider)
  #
  # It's recommended you read the documentation before configuration of this section:
  # https://www.authelia.com/c/oidc
  oidc:
    # The hmac_secret is used to sign OAuth2 tokens (authorization code, access tokens and refresh tokens).
    # HMAC Secret can also be set using a secret: https://www.authelia.com/c/secrets
    hmac_secret: this_is_a_secret_abc123abc123abc

    # The issuer_certificate_chain is an optional PEM encoded certificate chain. It's used in conjunction with the
    # issuer_private_key to sign JWT's. All certificates in the chain must be within the validity period, and every
    # certificate included must be signed by the certificate immediately after it if provided.
    issuer_certificate_chain: |
      -----BEGIN CERTIFICATE-----
      MIIDETCCAfmgAwIBAgIQTsERfU1GhVHT0dmayfX7ZzANBgkqhkiG9w0BAQsFADAp
      MREwDwYDVQQKEwhBdXRoZWxpYTEUMBIGA1UEAwwLKi5sb2NhbGhvc3QwHhcNMjMw
      NzE3MTM0NDQ5WhcNMjQwNzE2MTM0NDQ5WjApMREwDwYDVQQKEwhBdXRoZWxpYTEU
      MBIGA1UEAwwLKi5sb2NhbGhvc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCok9Sw5xDbpkT7FezLY2uz5nOMuMgG6JzjJZkMiVD4tJQ/N2FoXAylW/09
      dixGi7LjKExQRdn9zW7/XN42/Cy71tASlhbZbU8fazk/JQWbUGm3qr0CjxoDsfBJ
      dDK2yqbyDmq2UCcsoObz1hM+2RXREgLna/Ybi1Q7WV919zgSEvrwl5SBAoRaOxGi
      VuFEWObsmMTl4FkP6M67Ucl/UcYSAtDJXm1V5NITUX/Id5bfcS5/aCaXfoS2QUny
      xTQ+qGSOy1tjDJ/cAzfABTOo2/96ZnTZiM1wYh9YN5ldltUK40x1fAcXxZrspMUa
      wjnnaFuU8K0bAxZfjYiHT5gHcv2FAgMBAAGjNTAzMA4GA1UdDwEB/wQEAwIFoDAT
      BgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUA
      A4IBAQBc5F7JL1HjNQmlwjxTogTiD54jBwE6xK8NsSfqlhqgaaa/ceadxDlZYVli
      3EjcMNhrrZJ/SuD5HT+3ZZoGFWVNiWVsNMn+Ffkb7pGFrro74/VWqZpqmBlRXJrM
      9y39Oy1T7g1jLulnjTWiGNwx2WHCA2frtYxmZAZ5zUrG1XsAcdtelypd/UuRNdKB
      yBXN7RlpHpqi0C9UU1O71HRRdlTkBt+CaqbcczSAA67Bw6TNYi60o4wO9yOEjwdp
      gxFU4VRjCqDc3X09Bhx8LzpgNy7KTue8zhRYHkiEMy7Q1x8rURnIqpbXHUdbKvx4
      VmAAwiOr60bAFmRwfBFdUdYWJraZ
      -----END CERTIFICATE-----
    # The issuer_private_key is used to sign the JWT forged by OpenID Connect.
    # Issuer Private Key can also be set using a secret: https://www.authelia.com/c/secrets
    issuer_private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEowIBAAKCAQEAqJPUsOcQ26ZE+xXsy2Nrs+ZzjLjIBuic4yWZDIlQ+LSUPzdh
      aFwMpVv9PXYsRouy4yhMUEXZ/c1u/1zeNvwsu9bQEpYW2W1PH2s5PyUFm1Bpt6q9
      Ao8aA7HwSXQytsqm8g5qtlAnLKDm89YTPtkV0RIC52v2G4tUO1lfdfc4EhL68JeU
      gQKEWjsRolbhRFjm7JjE5eBZD+jOu1HJf1HGEgLQyV5tVeTSE1F/yHeW33Euf2gm
      l36EtkFJ8sU0PqhkjstbYwyf3AM3wAUzqNv/emZ02YjNcGIfWDeZXZbVCuNMdXwH
      F8Wa7KTFGsI552hblPCtGwMWX42Ih0+YB3L9hQIDAQABAoIBAQChaeud96IMr4gd
      Y0D4/pmCCIdblxLwioqudLG3b0Q436+TWFPMuVbiftJcp2p9ogYHu+5WbovsmWhO
      231q6MtskKNrKIt4ZVH9o42NCMX1kWmok7OnX55pK1gI/VoR7LktzOAg8V6RPP/n
      OnPzGanqJnThYl6kwSRGL61YJv9pTXVPknYSxU86qgmhtGgZQylUioHzpaqMMduV
      eS3rEkzMc5+EIe8j8Vxoa2EelTNQ0+WcaCzLKuCWxwIkPoAwUpmHGzbVxVgJhTPW
      uIR9NTIYdKxY0UC0ao50KqXK5sKH3fVlynwlbR5s6Q4EV5wblHhqOodgGbzR09jB
      HlidL92BAoGBANQeGJ8q9vWZjxHwwqdX0EYsPAdPux8DecUfiPs3cOGMCaIwCyCi
      Y+CkJnrQRw1iTHLLtFzWA1chD4NkyfhlRflBOKkZLhsNep0+pTYxRzvoQA2Ri6zG
      WzN5cjpcJ3COigqCQKb1CaGJkmgZfJ6uCv4GOHoz1yN3wuCSsmxCh1x7AoGBAMtz
      0ZIZnxDoH8Z3foQEo4J/qUdzQjcajB4TBLZfowwVcPletFjRZYbvM5i03hb5yP+m
      VJUykVKmqBQu8Qh797kiRx5xDGodZPmwlQLchMZjID+KUNVyXmAPn4mbKqu0OF8L
      59GD0or4QT/4HFoiUjAAm8xyVCtib8DN4NG2AO3/AoGAAdnxZRI+7Y3VjdaIHGXL
      z5D7RSURAQhKu8m2rFqjhZRvURcSQcqpDIDiRRgkRp2hBS9594V2qgAD3qW2jZB0
      t+Q11mP93waTF2RAlOSBNqikRnoKugtRKHXa5V+AiJ713Xmdjtd8qghFWts+FzR1
      rBnpzEc/jXOyI7ukCwXZoJkCgYAMdtD9AWLUV1QzBXkTv3EA+q81OGNzGsZAxWuB
      fMRxZhLgxCOKWXG93YOstE/y2mSs/NSru0hZ5unfKq0LlwSrK+VtgQGAssJP5biL
      T1U3DjWYjvG60eHkQrDEbmQj1supTwJpvIi2iNT+hUW/Y+DjHfZthQeRDNvJ1RMT
      5fGSowKBgBO7ey4N4i+5yhlyyAtnlhNZc2kvTeqoOFWsP0lN208BokQ+cZw5CRGv
      7pkJ6kP7AqZj7bTlOqqUWny1ld+pDA280ix7eVGYW2KV7WwWAuNLCswQfx0eSkfG
      r45AQwuDnmZDV3M1DfohMB0bCRtgQq8VH07iHJk4b8ezQdlhjSTE
      -----END RSA PRIVATE KEY-----

    # The lifespans configure the expiration for these token types.
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m

    # Enables additional debug messages.
    enable_client_debug_messages: true

    # SECURITY NOTICE: It's not recommended changing this option and values below 8 are strongly discouraged.
    minimum_parameter_entropy: 8

    # SECURITY NOTICE: It's not recommended changing this option, and highly discouraged to have it set to 'never'
    # for security reasons.
    enforce_pkce: public_clients_only

    # Cross-Origin Resource Sharing (CORS) settings.
    cors:
      # List of endpoints in addition to the metadata endpoints to permit cross-origin requests on.
      endpoints:
         - authorization
         - token
         - revocation
         - introspection
         - userinfo

      ## List of allowed origins.
      ## Any origin with https is permitted unless this option is configured or the
      ## allowed_origins_from_client_redirect_uris option is enabled.
      # allowed_origins:
        # - https://example.com

      ## Automatically adds the origin portion of all redirect URI's on all clients to the list of allowed_origins,
      ## provided they have the scheme http or https and do not have the hostname of localhost:9091.
      allowed_origins_from_client_redirect_uris: true

    ## Clients is a list of known clients and their configuration.
    clients:
         # The ID is the OpenID Connect ClientID which is used to link an application to a configuration.
        # The description to show to users when they end up on the consent screen. Defaults to the ID above.
        # The client secret is a shared secret between Authelia and the consumer of this client.
        # Sector Identifiers are occasionally used to generate pairwise subject identifiers. In most cases this is not
        # necessary. Read the documentation for more information.
        # The subject identifier must be the host component of a URL, which is a domain name with an optional port.
        # Sets the client to public. This should typically not be set, please see the documentation for usage.
        # The policy to require for this client; one_factor or two_factor.
      - id: web-client
        description: The Web client for calendar
        secret: this_is_a_secret # TODO change this secret
        sector_identifier: localhost:9091
        public: false
        authorization_policy: one_factor
        # The consent mode controls how consent is obtained.
        consent_mode: auto
        # This value controls the duration a consent on this client remains remembered when the consent mode is
        # configured as 'auto' or 'pre-configured'.
        pre_configured_consent_duration: 1w
        # Audience this client is allowed to request.
        audience: []
        # Scopes this client is allowed to request.
        scopes:
          - openid
          - groups
          - email
          - profile
         # Redirect URI's specifies a list of valid case-sensitive callbacks for this client.
        redirect_uris:
           - https://localhost:3000/
        # Grant Types configures which grants this client can obtain.
        # It's not recommended to define this unless you know what you're doing.
        grant_types:
          - refresh_token
          - authorization_code
        # Response Types configures which responses this client can be sent.
        # It's not recommended to define this unless you know what you're doing.
        response_types:
          - code
        # Response Modes configures which response modes this client supports.
        response_modes:
          - form_post
          - query
          - fragment
        # The algorithm used to sign userinfo endpoint responses for this client, either none or RS256.
        userinfo_signing_algorithm: RS256
