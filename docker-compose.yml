# start container: docker compose up -d --build
# stop container: docker compose down

# Set environments, label and command in docker-compose.override.yml

version: "3.9"

services:
  # calendar api
  calendar.api:
    build:
      context: src/calendar-backend
      dockerfile: Calendar.Api/Dockerfile
    depends_on:
      mongodb:
        condition: service_started
      keycloak:
        condition: service_started
    restart: always
    networks:
      - backend
      - frontend
    ports:
      - 4000:80

  # calendar client
  client:
    build: 
      context: ./src/calendar-client
      args:
        - VITE_API_URL="http://localhost:5000"
        - VITE_OIDC_CLIENT_ID="Wo9T9nS0ebJbUpVso6wpOGgVluQaqajA"
        - VITE_OIDC_AUTHORITY="http://localhost:8080/realms/master"
    restart: always
    depends_on:
      keycloak:
        condition: service_started
    networks:
      - frontend
    ports:
      - 3005:80

  # mongo db
  mongodb:
    image: mongo
    restart: always
    networks:
      - backend
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
      - ./config/mongodb/logs:/var/log/mongodb:rw
      # - ./config/mongodb/init:/docker-entrypoint-initdb.d/:ro

  # keycloak authentication
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    restart: on-failure:1
    depends_on:
      posgressdb:
        condition: service_healthy
    networks:
      - frontend
      - backend
    volumes:
      - ./config/keycloak/import:/opt/keycloak/data/import:ro
    ports:
      - 8080:8080
  # postgres db
  posgressdb:
      image: "postgres:alpine3.18"
      networks:
        - backend
      ports:
        - "5432"
      volumes:
        - posgress-data:/var/lib/postgresql/data
        # - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
        # - ./config/postgres/logs:/var/log/postgresql:rw
  # seq logging
  seq:
    image: datalust/seq:latest
    restart: always
    ports:
      - "5341:80"
    volumes:
      - seq-data:/data
    networks:
      - backend

volumes:
  mongodb-data:
    driver: local
  posgress-data:
    driver: local
  seq-data:
    driver: local

networks:
  backend:
  frontend:
    driver: bridge
# dotnet dev-certs https -ep $env:USERPROFILE\.aspnet\https\aspnetapp.pfx