# start container: docker compose up -d --build
# stop container: docker compose down

# Set environments, label and command in docker-compose.override.yml

version: "3.9"

services:
  # Api
  calendarapi:
    build:
      context: src/calendar-backend
      dockerfile: Calendar.Api/Dockerfile
    depends_on:
      mongodb:
        condition: service_started
    restart: always
    networks:
      - backend
      - frontend
    ports:
      - 4000:80

  # Client
  client:
    build: ./src/calendar-client
    restart: always
    networks:
      - frontend
    ports:
      - 3005:80

  # Mongo DB
  mongodb:
    image: mongo
    restart: always
    networks:
      - backend
    ports:
      - 27017:27017
    volumes:
      - noSqlData:/data/db

  # Maria DB
  mariadb:
    image: mariadb
    restart: always
    networks:
      - backend
    ports:
      - 3306:3306
    volumes:
      - sqlData:/var/lib/mysql

  # Authelia
  authelia:
    image: authelia/authelia:latest
    restart: on-failure:1
    depends_on:
      - redis
      - mariadb
      # - traefik
    volumes:
      # - ${PWD}/config/authelia/configuration.yml:/config/configuration.yml
      - ./config/authelia/:/config/
      - ./config/secrets:/secrets:ro
    networks:
      - frontend
      - backend
    ports:
      - 9091:9091

  # traefik
  traefik:
    image: traefik:v2.10.3
    volumes:
      - ./config/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frontend
    ports:
      - '80:80'
      - '443:443'
      
  posgressdb:
      image: "postgres:alpine3.18"
      networks:
        - backend
      ports:
        - "5432"
      environment:
        - POSTGRES_PASSWORD=74RuqICjDPQEFREmhIFaqRf6H
        - POSTGRES_USER=authelia

  # redis for authelia sessions
  redis:
    image: redis:alpine
    volumes:
      - ./config/redis.conf:/etc/redis/redis.conf
      - ./config/redis:/data
    networks:
      - backend
    expose:
      - 6379
    restart: on-failure:1

volumes:
  noSqlData:
  sqlData:

networks:
  backend:
  frontend:
    driver: bridge
# dotnet dev-certs https -ep $env:USERPROFILE\.aspnet\https\aspnetapp.pfx