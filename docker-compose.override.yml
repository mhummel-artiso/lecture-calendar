version: '3.9'

volumes:
  redisinsight:

services:
  calendar.api:
    environment:
      MONGODB_CONNECTIONSTRING: mongodb://mongodb:27017/
      TZ: Europe/Berlin

  client:
    environment:
     TZ: Europe/Berlin
  
  mongodb:
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      TZ: Europe/Berlin
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 10s
      timeout: 10s
      retries: 5

  # add new client https://developers.redhat.com/blog/2020/01/29/api-login-and-jwt-token-generation-using-keycloak#set_up_a_client
  # while import errors  https://howtodoinjava.com/devops/keycloak-script-upload-is-disabled/
  keycloak:
    # healthcheck:
    #   test: ["CMD", "curl --fail -s http://localhost:8080/health | jq 'select((.status == \"UP\") or (.checks[].status == \"UP\"))'"]
    #   interval: 30s
    #   timeout: 3s
    #   start_period: 10s
    #   retries: 10
    command:
      - "--verbose"
      - "start-dev"
      - "--import-realm"
      - "--features=token-exchange"
      # - "--https-key-store-file=/etc/x509/https/tls.jks"
      # - "--https-key-store-password=${MASTER_PW}"
    environment:
      TZ: Europe/Berlin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${MASTER_PW}
      KC_HEALTH_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://posgressdb/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${MASTER_PW}

  posgressdb:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      TZ: Europe/Berlin
      POSTGRES_PASSWORD: ${MASTER_PW}
      POSTGRES_USER: keycloak
