version: '3.9'

services:
  calendarapi:
    environment:
      MONGODB_CONNECTIONSTRING: mongodb://mongodb:27017/
      TZ: Europe/Berlin
    labels:
    - 'traefik.enable=true'
    - 'traefik.http.routers.authelia.rule=Host(`api.${DOMAIN}`)'
    - 'traefik.http.routers.authelia.entrypoints=https'
  client:
    environment:
     TZ: Europe/Berlin
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`${DOMAIN}`)'
      - 'traefik.http.routers.authelia.entrypoints=https'
  
  mariadb:
    environment:
      # user name: root
      MARIADB_ROOT_PASSWORD: example
      TZ: Europe/Berlin
  
  mongodb:
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      TZ: Europe/Berlin
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 10s
      timeout: 10s
      retries: 5

  authelia:
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`authelia.${DOMAIN}`)'
      - 'traefik.http.routers.authelia.entrypoints=https'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.certresolver=letsencrypt'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/authz/forward-auth?authelia_url=https://authelia.${DOMAIN}'  # yamllint disable-line rule:line-length
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'  # yamllint disable-line rule:line-length
    expose:
      - 9091
    # tty: true
    # command:
    #   - sh
    # healthcheck:
    #   ## In production the healthcheck section should be commented.
    #   disable: true
    environment:
      TZ: Europe/Berlin
      AUTHELIA_JWT_SECRET_FILE: /secrets/JWT_SECRET
      AUTHELIA_SESSION_SECRET_FILE: /secrets/SESSION_SECRET
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /secrets/STORAGE_ENCRYPTION_KEY
      # AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /secrets/REDIS_PASSWORD

  traefik:
    environment:
      TZ: Europe/Berlin
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)'
      - 'traefik.http.routers.api.entrypoints=http'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.api.middlewares=authelia@docker'
    command:
      - '--api'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.http=true'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.http.http.redirections.entrypoint.to=https'
      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.https=true'
      - '--entrypoints.https.address=:443'
      - '--certificatesResolvers.letsencrypt.acme.email=hummelm.tin21@student.dhbw-heidenheim.de'
      - '--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json'
      - '--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=http'
      - '--log=true'
      - '--log.level=DEBUG'
  redis:
    command: ["redis-server", "/etc/redis/redis.conf"]
    environment:
      TZ: Europe/Berlin
  redisinsight:
    image: redislabs/redisinsight
    ports:
      - 8001:8001
    networks:
      - backend
    volumes:
      - redisinsight:/db
volumes:
  redisinsight: